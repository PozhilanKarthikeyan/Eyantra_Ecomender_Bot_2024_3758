vendor_name = ModelSim
source_file = 1, C:/intelFPGA_lite/20.1/Sequence_detector/t2a_uart/uart_tx/code/uart_tx.v
source_file = 1, C:/intelFPGA_lite/20.1/Sequence_detector/t2a_uart/uart_tx/db/uart_tx.cbx.xml
design_name = uart_tx
instance = comp, \tx~output , tx~output, uart_tx, 1
instance = comp, \tx_done~output , tx_done~output, uart_tx, 1
instance = comp, \clk_3125~input , clk_3125~input, uart_tx, 1
instance = comp, \clk_3125~inputclkctrl , clk_3125~inputclkctrl, uart_tx, 1
instance = comp, \tx_start~input , tx_start~input, uart_tx, 1
instance = comp, \counter~3 , counter~3, uart_tx, 1
instance = comp, \counter[0] , counter[0], uart_tx, 1
instance = comp, \Equal1~0 , Equal1~0, uart_tx, 1
instance = comp, \counter~5 , counter~5, uart_tx, 1
instance = comp, \counter[3] , counter[3], uart_tx, 1
instance = comp, \Add0~0 , Add0~0, uart_tx, 1
instance = comp, \Equal1~1 , Equal1~1, uart_tx, 1
instance = comp, \counter~4 , counter~4, uart_tx, 1
instance = comp, \counter[1] , counter[1], uart_tx, 1
instance = comp, \counter~2 , counter~2, uart_tx, 1
instance = comp, \counter~6 , counter~6, uart_tx, 1
instance = comp, \counter[2] , counter[2], uart_tx, 1
instance = comp, \Equal0~0 , Equal0~0, uart_tx, 1
instance = comp, \state~16 , state~16, uart_tx, 1
instance = comp, \state~17 , state~17, uart_tx, 1
instance = comp, \state.0000~feeder , state.0000~feeder, uart_tx, 1
instance = comp, \state.0000 , state.0000, uart_tx, 1
instance = comp, \WideOr2~0 , WideOr2~0, uart_tx, 1
instance = comp, \Equal0~1 , Equal0~1, uart_tx, 1
instance = comp, \bit_index[2]~2 , bit_index[2]~2, uart_tx, 1
instance = comp, \bit_index[0]~5 , bit_index[0]~5, uart_tx, 1
instance = comp, \bit_index[0] , bit_index[0], uart_tx, 1
instance = comp, \Add2~0 , Add2~0, uart_tx, 1
instance = comp, \bit_index[2]~4 , bit_index[2]~4, uart_tx, 1
instance = comp, \bit_index[2] , bit_index[2], uart_tx, 1
instance = comp, \state~22 , state~22, uart_tx, 1
instance = comp, \state~23 , state~23, uart_tx, 1
instance = comp, \state.ST_DATA , state.ST_DATA, uart_tx, 1
instance = comp, \state~15 , state~15, uart_tx, 1
instance = comp, \bit_index[1]~3 , bit_index[1]~3, uart_tx, 1
instance = comp, \bit_index[1] , bit_index[1], uart_tx, 1
instance = comp, \state~18 , state~18, uart_tx, 1
instance = comp, \state~19 , state~19, uart_tx, 1
instance = comp, \state~20 , state~20, uart_tx, 1
instance = comp, \state.ST_PARITY , state.ST_PARITY, uart_tx, 1
instance = comp, \state~21 , state~21, uart_tx, 1
instance = comp, \state.ST_STOP , state.ST_STOP, uart_tx, 1
instance = comp, \Selector0~1 , Selector0~1, uart_tx, 1
instance = comp, \data[3]~input , data[3]~input, uart_tx, 1
instance = comp, \data[2]~input , data[2]~input, uart_tx, 1
instance = comp, \data[0]~input , data[0]~input, uart_tx, 1
instance = comp, \data[1]~input , data[1]~input, uart_tx, 1
instance = comp, \Mux0~0 , Mux0~0, uart_tx, 1
instance = comp, \Mux0~1 , Mux0~1, uart_tx, 1
instance = comp, \data[7]~input , data[7]~input, uart_tx, 1
instance = comp, \data[6]~input , data[6]~input, uart_tx, 1
instance = comp, \data[4]~input , data[4]~input, uart_tx, 1
instance = comp, \data[5]~input , data[5]~input, uart_tx, 1
instance = comp, \Mux0~2 , Mux0~2, uart_tx, 1
instance = comp, \Mux0~3 , Mux0~3, uart_tx, 1
instance = comp, \Mux0~4 , Mux0~4, uart_tx, 1
instance = comp, \Selector7~0 , Selector7~0, uart_tx, 1
instance = comp, \parity_type~input , parity_type~input, uart_tx, 1
instance = comp, \Selector0~0 , Selector0~0, uart_tx, 1
instance = comp, \Selector0~2 , Selector0~2, uart_tx, 1
instance = comp, \tx~reg0 , tx~reg0, uart_tx, 1
instance = comp, \check~0 , check~0, uart_tx, 1
instance = comp, \check~1 , check~1, uart_tx, 1
instance = comp, \tx_done~0 , tx_done~0, uart_tx, 1
instance = comp, \tx_done~1 , tx_done~1, uart_tx, 1
instance = comp, \tx_done~reg0 , tx_done~reg0, uart_tx, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
