vendor_name = ModelSim
source_file = 1, C:/intelFPGA_lite/20.1/Sequence_detector/t2a_uart/uart_rx/code/uart_rx.v
source_file = 1, C:/intelFPGA_lite/20.1/Sequence_detector/t2a_uart/uart_rx/db/uart_rx.cbx.xml
design_name = uart_rx
instance = comp, \rx_msg[0]~output , rx_msg[0]~output, uart_rx, 1
instance = comp, \rx_msg[1]~output , rx_msg[1]~output, uart_rx, 1
instance = comp, \rx_msg[2]~output , rx_msg[2]~output, uart_rx, 1
instance = comp, \rx_msg[3]~output , rx_msg[3]~output, uart_rx, 1
instance = comp, \rx_msg[4]~output , rx_msg[4]~output, uart_rx, 1
instance = comp, \rx_msg[5]~output , rx_msg[5]~output, uart_rx, 1
instance = comp, \rx_msg[6]~output , rx_msg[6]~output, uart_rx, 1
instance = comp, \rx_msg[7]~output , rx_msg[7]~output, uart_rx, 1
instance = comp, \rx_parity~output , rx_parity~output, uart_rx, 1
instance = comp, \rx_complete~output , rx_complete~output, uart_rx, 1
instance = comp, \clk_3125~input , clk_3125~input, uart_rx, 1
instance = comp, \clk_3125~inputclkctrl , clk_3125~inputclkctrl, uart_rx, 1
instance = comp, \rx~input , rx~input, uart_rx, 1
instance = comp, \counter~0 , counter~0, uart_rx, 1
instance = comp, \counter[0] , counter[0], uart_rx, 1
instance = comp, \always0~0 , always0~0, uart_rx, 1
instance = comp, \counter~1 , counter~1, uart_rx, 1
instance = comp, \counter[1] , counter[1], uart_rx, 1
instance = comp, \Equal1~0 , Equal1~0, uart_rx, 1
instance = comp, \Add0~1 , Add0~1, uart_rx, 1
instance = comp, \counter~3 , counter~3, uart_rx, 1
instance = comp, \counter[2] , counter[2], uart_rx, 1
instance = comp, \counter~2 , counter~2, uart_rx, 1
instance = comp, \counter[3] , counter[3], uart_rx, 1
instance = comp, \Add0~0 , Add0~0, uart_rx, 1
instance = comp, \Equal1~1 , Equal1~1, uart_rx, 1
instance = comp, \Equal0~0 , Equal0~0, uart_rx, 1
instance = comp, \state~17 , state~17, uart_rx, 1
instance = comp, \state~21 , state~21, uart_rx, 1
instance = comp, \state.ST_STOP , state.ST_STOP, uart_rx, 1
instance = comp, \state~19 , state~19, uart_rx, 1
instance = comp, \state.ST_IDLE~feeder , state.ST_IDLE~feeder, uart_rx, 1
instance = comp, \state.ST_IDLE , state.ST_IDLE, uart_rx, 1
instance = comp, \Equal0~1 , Equal0~1, uart_rx, 1
instance = comp, \data~18 , data~18, uart_rx, 1
instance = comp, \bit_index[2]~2 , bit_index[2]~2, uart_rx, 1
instance = comp, \bit_index[1]~3 , bit_index[1]~3, uart_rx, 1
instance = comp, \bit_index[1] , bit_index[1], uart_rx, 1
instance = comp, \Decoder0~4 , Decoder0~4, uart_rx, 1
instance = comp, \data~37 , data~37, uart_rx, 1
instance = comp, \bit_index[2]~0 , bit_index[2]~0, uart_rx, 1
instance = comp, \bit_index[2] , bit_index[2], uart_rx, 1
instance = comp, \Decoder0~0 , Decoder0~0, uart_rx, 1
instance = comp, \bit_index[0]~1 , bit_index[0]~1, uart_rx, 1
instance = comp, \bit_index[0] , bit_index[0], uart_rx, 1
instance = comp, \state~20 , state~20, uart_rx, 1
instance = comp, \state.ST_PARITY , state.ST_PARITY, uart_rx, 1
instance = comp, \state~15 , state~15, uart_rx, 1
instance = comp, \check~0 , check~0, uart_rx, 1
instance = comp, \state~18 , state~18, uart_rx, 1
instance = comp, \check~1 , check~1, uart_rx, 1
instance = comp, \state~16 , state~16, uart_rx, 1
instance = comp, \state~22 , state~22, uart_rx, 1
instance = comp, \state.ST_DATA , state.ST_DATA, uart_rx, 1
instance = comp, \data~15 , data~15, uart_rx, 1
instance = comp, \parity_counter~0 , parity_counter~0, uart_rx, 1
instance = comp, \parity_counter~1 , parity_counter~1, uart_rx, 1
instance = comp, \data~14 , data~14, uart_rx, 1
instance = comp, \data~16 , data~16, uart_rx, 1
instance = comp, \data~17 , data~17, uart_rx, 1
instance = comp, \data[0] , data[0], uart_rx, 1
instance = comp, \data~19 , data~19, uart_rx, 1
instance = comp, \rx_msg[0]~reg0feeder , rx_msg[0]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[0]~5 , rx_msg[0]~5, uart_rx, 1
instance = comp, \rx_msg[0]~17 , rx_msg[0]~17, uart_rx, 1
instance = comp, \rx_msg[0]~reg0 , rx_msg[0]~reg0, uart_rx, 1
instance = comp, \Decoder0~1 , Decoder0~1, uart_rx, 1
instance = comp, \data~38 , data~38, uart_rx, 1
instance = comp, \data[1] , data[1], uart_rx, 1
instance = comp, \data~20 , data~20, uart_rx, 1
instance = comp, \data~21 , data~21, uart_rx, 1
instance = comp, \rx_msg[1]~reg0 , rx_msg[1]~reg0, uart_rx, 1
instance = comp, \Decoder0~2 , Decoder0~2, uart_rx, 1
instance = comp, \data~39 , data~39, uart_rx, 1
instance = comp, \data[2] , data[2], uart_rx, 1
instance = comp, \data~22 , data~22, uart_rx, 1
instance = comp, \data~23 , data~23, uart_rx, 1
instance = comp, \rx_msg[2]~reg0 , rx_msg[2]~reg0, uart_rx, 1
instance = comp, \Decoder0~3 , Decoder0~3, uart_rx, 1
instance = comp, \data~25 , data~25, uart_rx, 1
instance = comp, \data~24 , data~24, uart_rx, 1
instance = comp, \data[3] , data[3], uart_rx, 1
instance = comp, \data~26 , data~26, uart_rx, 1
instance = comp, \rx_msg[3]~reg0 , rx_msg[3]~reg0, uart_rx, 1
instance = comp, \data~28 , data~28, uart_rx, 1
instance = comp, \data[4] , data[4], uart_rx, 1
instance = comp, \data~27 , data~27, uart_rx, 1
instance = comp, \data~29 , data~29, uart_rx, 1
instance = comp, \rx_msg[4]~reg0 , rx_msg[4]~reg0, uart_rx, 1
instance = comp, \Decoder0~5 , Decoder0~5, uart_rx, 1
instance = comp, \data~40 , data~40, uart_rx, 1
instance = comp, \data[5] , data[5], uart_rx, 1
instance = comp, \data~30 , data~30, uart_rx, 1
instance = comp, \data~31 , data~31, uart_rx, 1
instance = comp, \rx_msg[5]~reg0feeder , rx_msg[5]~reg0feeder, uart_rx, 1
instance = comp, \rx_msg[5]~reg0 , rx_msg[5]~reg0, uart_rx, 1
instance = comp, \Decoder0~6 , Decoder0~6, uart_rx, 1
instance = comp, \data[6] , data[6], uart_rx, 1
instance = comp, \data~32 , data~32, uart_rx, 1
instance = comp, \data~33 , data~33, uart_rx, 1
instance = comp, \data~34 , data~34, uart_rx, 1
instance = comp, \rx_msg[6]~reg0 , rx_msg[6]~reg0, uart_rx, 1
instance = comp, \Decoder0~7 , Decoder0~7, uart_rx, 1
instance = comp, \data[7]~feeder , data[7]~feeder, uart_rx, 1
instance = comp, \data[7] , data[7], uart_rx, 1
instance = comp, \data~35 , data~35, uart_rx, 1
instance = comp, \data~36 , data~36, uart_rx, 1
instance = comp, \rx_msg[7]~reg0 , rx_msg[7]~reg0, uart_rx, 1
instance = comp, \parity~0 , parity~0, uart_rx, 1
instance = comp, \rx_parity~reg0 , rx_parity~reg0, uart_rx, 1
instance = comp, \rx_complete~reg0feeder , rx_complete~reg0feeder, uart_rx, 1
instance = comp, \rx_complete~reg0 , rx_complete~reg0, uart_rx, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
