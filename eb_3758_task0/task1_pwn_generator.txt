// EcoMender Bot : Task 1A : PWM Generator
/*
Instructions
-------------------
Students are not allowed to make any changes in the Module declaration.
This file is used to design a module which will scale down the 100KHz Clock Frequency to 500Hz and perform Pulse Width Modulation on it.

Recommended Quartus Version : 20.1
The submitted project file must be 20.1 compatible as the evaluation will be done on Quartus Prime Lite 20.1.

Warning: The error due to compatibility will not be entertained.
-------------------
*/

//PWM Generator
//Inputs : clk_1MHz, pulse_width
//Output : clk_500Hz, pwm_signal

module pwm_generator(
    input clk_1MHz,
    input [3:0] pulse_width,
    output reg clk_500Hz, pwm_signal
);

initial begin
    clk_500Hz = 1; pwm_signal = 1;
end

//////////////////DO NOT MAKE ANY CHANGES ABOVE THIS LINE//////////////////
reg clk_16kHz;
initial begin
    clk_500Hz = 0; 
	 clk_16kHz=0;
end


reg [9:0] counter = 0;
reg [6:0] counter_16khz = 0;
reg [3:0] pulse_counter =0;
reg check=0;


always @(posedge clk_1MHz) begin
	if (!counter) clk_500Hz = ~clk_500Hz;
	counter = counter + 1'b1;
	if (counter==1000)counter = 0;
	
	
	if (counter_16khz==63 && check==0) begin
	counter_16khz = 0;
	check = check+1'b1;
	end
	if (counter_16khz==62 && check==1) begin
	counter_16khz = 0;
	check = check+1'b1;
	end
	
	if (!counter_16khz) clk_16kHz = ~clk_16kHz;
	counter_16khz = counter_16khz + 1'b1;
	
end

always @(posedge clk_16kHz) begin
	pwm_signal= (pulse_width >= pulse_counter) ? 1:0; 
	pulse_counter = pulse_counter + 1'b1;
end


//////////////////DO NOT MAKE ANY CHANGES BELOW THIS LINE//////////////////

endmodule
